note:
This file is just a temporary solution to track development, untill
a proper application (if time permits) will replace it.
Some git commits refers to old git trees, which they live somewhere
in the filesystem. Also the language is usually short and in coding
logic, which might not make sense in some places.

________________________________________________________________________
Change the color to the Client write_prompt

make a function for pager routine

[readline] when :lk and cursor is between then space doesn't work (is known)
[DONE] in 0618cb6

when --arg= and you enter the last component selection this becomes:
     --arg= lastcomp  instead of
     --arg=lastcomp [DONE] in cd4446e

pager:
CTRL_ can be used to jump to defininition specific to the filetype
if exist,
(example man) to jump to another man page to the see also section
(this is under development)
turn off any input from other Language maps

append (unamed buffers) to the main buffer
[DONE] in 5989940

_________________________________________________________________________________
KeysNs:

instead of matching terminals, maybe there is a way to determine the keys values
without the keys actually pressed
(might found a couple of ways)
_________________________________________________________________________________
DEVELOPMENT:

Interface for executing scripts


tracker application
-------------------


expression register
-------------------


-------------------
introduction of _i, __i,  kind of variables to replace in many situations
the usage of _for i (...) and this variable needs to be accesible
from outside the function scope to execution unit,
but such var should be declared as private
so cannot be accessible outside of the execution unit (for no pollusion)

if desired, maybe opposite (i_, i__) can be declared as static, and when live
inside a named namespace,

thinking about that this can be extended, as namespaces are cheap, to avoid
the overhead of passing arguments,
|  thinking about that, maybe start to think the namespace as an object
|    maybe avoid structs this way
|      or a struct with one field - the namespace, see sync
|      expression as:  s.ask[NS].for[something].which.returns[Some_Type]
|                      s.do|NS|.something[Void_Type]
|
|
|-------------------------------------------------------------------------------
NOT SURE:
      NS       declared as       accessible as
      -----    ------------      -------------
      ROOT
               public     V      V
               static    _V_     ROOT->_v_
               private   _v_     ERROR
               func scope v      ERROR


_________________________________________________________________________________
VARIABLE RESEMBLENCE of declaration keywords like (maybe)

  PERM_PRIVATE  = S_IRWXU,
  PERM_STATIC   = PERM_PRIVATE|S_IRWXG,
  PERM_STATIC_  = PERM_PRIVATE|S_IWGRP,
  PERM_STATIC__ = PERM_PRIVATE|S_IRGRP,
  PERM_PUBLIC   = PERM_STATIC |S_IRWXO,
  PERM_PUBLIC_  = PERM_STATIC |S_IWOTH,
  PERM_PUBLIC__ = PERM_STATIC |S_IROTH;
_________________________________________________________________________________
Media_Type:

draw volume val
after killed the window/process and you start again, hangs
(maybe the fifo needs to be removed)
[DONE] in b0396f6
it wasn't just mplayer, the bug was fixed and it was caused by addwind (), when it
was trying to recreate an existing tmp directory
_________________________________________________________________________________
COMMANDS:

chmod: [URGENT] fix chmod`ing top directory to 0644 when --recursive
[DONE] in 78664ce

chmod: Maybe direct chmod to change mode bits --from=mode to --mode=mode

chmod: add --no-preserve-root (look at rm)

chown: add --linksalso (something) to change also ownership of symlinks
cd: make uniq stackfile for every window type

cd: make argcompletion to work
[DONE] in 56a9e90

ln:
  handle relative symlinks (maybe fix autocompletion (evaldir) || a special switch)

[ls] when --match=foo then they are also print the directories [DONE] in ab01212

ls: match 'mode', e.g., executables [DONE] (in 5e8782f, but only for executables)
maybe move this feature to search

search: match dangling symbolic links
[DONE] in 56a9e90

mkdir:
  --parents - stop, when first directory exists

searchandreplace: search and replace for files in a given patterm
_________________________________________________________________________________
I:

track top i.sl [DONE] in 95c3347

merge dbg scripts [DONE] in b0396f6

reorganizing hierarchy [DONE] in 0b28586, in 5989940, in b8132ae, in 971c84f

IMPORTANT:
TEMPDIR  should be   SOURCEDIR/../tmp   ?permissions 0755?  tmpfs
                     /USERNAME/PID     ?permissions 0744?  tmpfs
thinking about that can also change the following
STDNS   should be   SOURCEDIR/../root       ?permissions 0755?    tmpfs
      installation at the first instance
USERNS  might  be   SOURCEDIR/../usr        ?permissions 0755?    tmpfs
      ?installation at the first request?   ?permissions 0755?    tmpfs
PERSNS  might be    SOURCEDIR/../USERNAME   ?permissions 0744?    tmpfs
      installation at the first instance
 
_________________________________________________________________________________
DEBUG:PROFILE:COMPILE

profile functions

git in topdir to track the sources
[DONE] in the start of cycle

git: in initrepo check if already in the db, even if '/' is not the last char
[DONE] added are_same_files ()

git in PERSNS to track only PERSNS
[DONE] in the start of cycle

git: repo completion (doesn't get it from command line)

bytecompile:
when removing dirs, .history is ignored so dirs are not deleted
[DONE] changed the logic

building modules throw the application
_________________________________________________________________________________
user.func

remove_spaces_from_fnames: make user optional the substitution
[DONE] in dc3f7ee
_________________________________________________________________________________
Added a way to get the output of a system command (dangerous, limited)
e.g, when a command needs input from keyboard
maybe a dir -
            - com
                  - opt
                  - optb
             - comb
                  - opt ...

add a sync lib -- interesting [Done ... partly]
_________________________________________________________________________________
edVi

parse - check for no length,|
                            |- DONE
draw - check for no length  |

hold drawing instances - settings

keep the process idled
   different sockets

func in host for requested dimensions

are we in wrapmode?
different colors for repeated wraps?
function to create wrapped wind
_________________________________________________________________________________
Root_Type
add a sync option [Done] works good (needs a little more love)

add a display function option

add a cleanup TEMPDIR except current (might be dangerous if another instance is running)
_________________________________________________________________________________
add a echo $? shell type thing

dont open STDOUTFP && STDERRFP when are same buffer

add a fetch lib
_________________________________________________________________________________

PROTOTYPES:

walk through arrays with names (replace Assoc types)

working prototype:

variable
  var = 0,
  map = 0,
  get = Array_Type[2];

get[var] = Struct_Type[2];

define ref (s, varname)
{
  return __get_reference (varname);
}

define val (s, varname)
{
  return (@__get_reference (varname));
}

get[var][map] = struct
  {
  ref = &ref,
  val = &val
  };

variable retval = get[var][map].val ("var");
() = fprintf (stdout, "expected 0 received %S ... %s\n", retval,
  0 == retval ? "succeeded" : "failed");

retval = get[var][map].ref ("var");
() = fprintf (stdout, "expected &var received %S ... %s\n", retval,
  "&var" == string (retval) ? "succeeded" : "failed");

retval = get[var][map].ref ("should_be_null");
() = fprintf (stdout, "expected NULL received %S ... %s\n", retval,
  NULL == retval ? "succeeded" : "failed");
